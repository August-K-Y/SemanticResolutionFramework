package umbc.ebiquity.kang.lucene.test;

import uk.ac.shef.wit.simmetrics.similaritymetrics.QGramsDistance;
import uk.ac.shef.wit.simmetrics.tokenisers.TokeniserQGram2Extended;
import uk.ac.shef.wit.simmetrics.tokenisers.TokeniserQGram3Extended;
import umbc.ebiquity.kang.textprocessing.Matcher;
import umbc.ebiquity.kang.textprocessing.TextContentMatcher;
import umbc.ebiquity.kang.textprocessing.TextContentMatcher.MatchMethod;

public class TermVectorMatcherTest {

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		Matcher matcher = TextContentMatcher.compile("delivery", MatchMethod.SYNONYM);

		double score1 = matcher.getSimilarityScore("despatch destination", false, true);

		double score2 = matcher.getSimilarityScore(" compan adress", false, true);

		double score3 = matcher.getSimilarityScore("deliver", false, true);
		
		QGramsDistance similarityByGGrams = new QGramsDistance(new TokeniserQGram2Extended());
		
		System.out.println(similarityByGGrams.getSimilarity("delivery","deliver"));
		System.out.println("---------Synonym----------------------------");
		System.out.println("score1: " + score1);
		System.out.println("score2: " + score2);
		System.out.println("score3: " + score3);

		
//		Matcher matcher2 = TextContentMatcher.compile("reference company", MatchMethod.EXACT);
//
//		double score21 = matcher2.getSimilarityScore("despatch destination");
//
//		double score22 = matcher2.getSimilarityScore("reference");
//
//		double score23 = matcher2.getSimilarityScore("company reference");
//		
//		System.out.println("-----------Exact--------------------------");
//		System.out.println("score21: " + score21);
//		System.out.println("score22: " + score22);
//		System.out.println("score23: " + score23);

	}

}
